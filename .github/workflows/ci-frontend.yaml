# name: 'CI - Frontend'
# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - 'feature/**'
#       - 'fix/**'
#   pull_request:
#     branches:
#       - 'feature/**'
#       - 'fix/**'

# jobs:
#   build:
#     name: 'Build üèó'
#     strategy:
#       matrix:
#         os:
#           - 'ubuntu-latest'
#         node-version:
#           - '17.9.0'
#     defaults:
#       run:
#         working-directory: frontend/
#     runs-on: ${{ matrix.os }}

#     steps:
#       - name: Check Repository
#         uses: actions/checkout@v3
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache-dependency-path: frontend/pnpm-lock.json
#       - name: Install pnpm
#         uses: pnpm/action-setup@v2
#         id: pnpm-install
#         with:
#           version: 7
#       - name: Install dependencies
#         run: pnpm install
#       - name: Display pnpm version
#         run: pnpm --version
#       - name: Display Node version
#         run: node --version

#   code-quality:
#     needs: build
#     name: 'Code-Quality üíé'
#     strategy:
#       matrix:
#         os:
#           - 'ubuntu-latest'
#         node-version:
#           - '17.9.0'
#     defaults:
#       run:
#         working-directory: frontend/
#     runs-on: ${{ matrix.os }}

#     steps:
#       - name: Check Repository
#         uses: actions/checkout@v3
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache-dependency-path: frontend/pnpm-lock.json  
#       - name: Install pnpm 
#         uses: pnpm/action-setup@v2
#         id: pnpm-install
#         with:
#           version: 7
#       - name: Install dependencies
#         run: pnpm install
#       - name: Display pnpm version
#         run: pnpm --version
#       - name: Display Node version
#         run: node --version
#       - name: Run the installed dependencies
#         run: pnpm run build --if-present
#       - name: Lint frontend with Prettier
#         run: pnpm fmt:check
#       - name: Lint frontend code with ESLint
#         run: pnpm lint:check

#   test:
#     needs: [build, code-quality]
#     name: 'Test üß™'
#     strategy:
#       matrix:
#         os:
#           - 'ubuntu-latest'
#         node-version:
#           - '17.9.0'
#     defaults:
#       run:
#         working-directory: frontend/
#     env:
#       CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

#     runs-on: ${{ matrix.os }}

#     steps:
#       - name: Check Repository
#         uses: actions/checkout@v3
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache-dependency-path: frontend/pnpm-lock.json  
#       - name: Install pnpm 
#         uses: pnpm/action-setup@v2
#         id: pnpm-install
#         with:
#           version: 7
#       - name: Install dependencies
#         run: pnpm install
#       - name: Display pnpm version
#         run: pnpm --version
#       - name: Display Node version
#         run: node --version
#       - name: Run the installed dependencies
#         run: pnpm run build --if-present
#       - name: Test React application
#         run: pnpm test:notestpass
#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v3
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
#           directory: ./frontend/coverage/
#           fail_ci_if_error: false
#           flags: frontend_app_tests
#           name: codecov-umbrella
#           verbose: true
